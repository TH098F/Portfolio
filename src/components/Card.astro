---
interface Props {
  title: string;
  skills: { name: string; color: string }[];
}

const { title, skills } = Astro.props;

function getIconClass(skillName) {
  switch (skillName) {
    case 'HTML':
      return 'fab fa-html5';
    case 'CSS':
      return 'fab fa-css3-alt';
    case 'JavaScript':
      return 'fab fa-js';
    case 'React':
      return 'fab fa-react';
    case 'Bootstrap':
      return 'fab fa-bootstrap';
    case 'Sass':
      return 'fab fa-sass';
	case 'Node.js':
		return 'fab fa-node-js';
	case 'Express.js':
		return 'fas fa-server';
	case 'MongoDB':
		return 'lni lni-mongodb';
	case 'Git':
		return 'fab fa-git-alt';
	case 'GitHub':
		return 'fab fa-github';
	case 'VS Code':
		return 'lni lni-vs-code';
	case 'Figma':
		return 'fab fa-figma';
	case 'MySQL':
		return 'lni lni-mysql';
	case 'REST':
		return 'fas fa-network-wired';
	case 'Astro': 
		return 'fas fa-rocket';
	case 'Netlify':
		return 'lni lni-netlify';
	case 'Video Editing':
		return 'fas fa-video';
	case 'SEO':
		return 'fas fa-search';
	case 'Google Firebase':
		return 'lni lni-firebase';
	case 'Tailwind CSS':
		return 'lni lni-tailwindcss';
	case 'Next.js':
		return 'lni lni-nextjs';	
    default:
      return '';
  }
}
---


<li class="link-card">
  <div>
    <h2>
      {title}
    </h2>
    <ul>
      {skills.map(skill => (
        <li key={skill.name}>
          <i class={getIconClass(skill.name)} style={{ color: skill.color }}></i> {skill.name}
        </li>
      ))}
    </ul>
  </div>
</li>

<style>
	.link-card {
		list-style: none;
		display: flex;
		padding: 1px;
		background-color: #23262d;
		background-image: none;
		background-size: 400%;
		border-radius: 7px;
		background-position: 100%;
		transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
		box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.1);
	}
	.link-card > div {
		width: 100%;
		text-decoration: none;
		line-height: 1.4;
		padding: calc(1.5rem - 1px);
		border-radius: 8px;
		color: white;
		background-color: #23262d;
		opacity: 0.8;
	}
	h2 {
		margin: 0;
		font-size: 1.25rem;
		transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
	}
	p {
		margin-top: 0.5rem;
		margin-bottom: 0;
	}
	.link-card li:is(:hover, :focus-within) {
		color: rgb(var(--accent-light));
		cursor: pointer;
	}
	.link-card:is(:hover, :focus-within) h2 {
		color: rgb(var(--accent-light));
		cursor: default;
	} 
</style>
