---
interface Props {
    projectname: string;
    projectid: string;
    projectdescription: string;
    technologies: { name: string; icon: string, color: string }[];
    projecttags: { name: string }[];
    projectpreview: string;
    projectlinks: {
        github: string;
        live: string;
    };  
}
const { 
    projectname = '', 
    projectid = '',
    projectdescription = '', 
    technologies = [], 
    projecttags = [], 
    projectpreview = '', 
    projectlinks = { github: '', live: '' } 
} = Astro.props;

function getIconClass(tagName: string) {
  switch (tagName) {
    case 'web development':
        return 'fas fa-globe';
    case 'mobile development':
        return 'fas fa-mobile-alt';
    case 'full stack':
        return 'fas fa-server';
    case 'front end':
        return 'fas fa-desktop';
    case 'back end':
        return 'fas fa-cogs';
    case 'design':
        return 'fas fa-palette';
    case 'game development':
        return 'fas fa-gamepad';
    case 'data science':
        return 'fas fa-chart-line';
    default:
        return 'fas fa-code';
  }
}

function getIconClass2(technologyName) {
  switch (technologyName) {
    case 'HTML':
      return 'fab fa-html5';
    case 'CSS':
      return 'fab fa-css3-alt';
    case 'JavaScript':
      return 'fab fa-js';
    case 'React':
      return 'fab fa-react';
    case 'Bootstrap':
      return 'fab fa-bootstrap';
    case 'Sass':
      return 'fab fa-sass';
    case 'Node.js':
      return 'fab fa-node-js';
    case 'Express.js':
      return 'fas fa-server';
    case 'MongoDB':
      return 'fas fa-database';
    case 'Git':
      return 'fab fa-git-alt';
    case 'Astro':
        return 'fas fa-rocket';
    case 'TypeScript':
        return 'lni lni-typescript';
    case 'ExpressJS':
        return 'fas fa-server';
    default:
      return '';
  }
}
---
<script>
    const projectpreviews = document.querySelectorAll('.project-preview img');
    const imageoverlay = document.querySelector('.image-overlay') as HTMLElement;

    projectpreviews.forEach((projectpreview) => {
        projectpreview.addEventListener('click', () => {
            imageoverlay.style.display = 'block';
            (projectpreview as HTMLElement).style.position = 'fixed';
            (projectpreview as HTMLElement).style.transition = 'all 0.5s ease';
            (projectpreview as HTMLElement).style.top = '50%';
            (projectpreview as HTMLElement).style.left = '50%';
            (projectpreview as HTMLElement).style.transform = 'translate(-50%, -50%)';
            (projectpreview as HTMLElement).style.zIndex = '1000';
            (projectpreview as HTMLElement).style.width = '80%';
            (projectpreview as HTMLElement).style.maxWidth = '800px';
            (projectpreview as HTMLElement).style.borderRadius = '10px';
            (projectpreview as HTMLElement).style.boxShadow = '0 0 10px rgba(0, 0, 0, 0.1)';
        });
    });

    imageoverlay.addEventListener('click', () => {
        imageoverlay.style.display = 'none';
        projectpreviews.forEach((projectpreview) => {
            (projectpreview as HTMLElement).style.transition = 'all 0.5s ease';
            (projectpreview as HTMLElement).style.position = 'static';
            (projectpreview as HTMLElement).style.top = 'auto';
            (projectpreview as HTMLElement).style.left = 'auto';
            (projectpreview as HTMLElement).style.transform = 'none';
            (projectpreview as HTMLElement).style.zIndex = 'auto';
            (projectpreview as HTMLElement).style.width = '100%';
            (projectpreview as HTMLElement).style.maxWidth = '300px';
            (projectpreview as HTMLElement).style.borderRadius = '10px';
            (projectpreview as HTMLElement).style.boxShadow = 'none';
        });
    });
    const buttons = document.querySelectorAll('button.readall');
        buttons.forEach((button) => {
            button.addEventListener('click', () => {
                const projectid = button.id;
                window.location.href = `/portfolio/projects/${projectid}`;
            });
        });
</script>

<div class="project">
    <h2>{projectname}</h2>
    <div class="project-preview">
        <img src={projectpreview} alt={projectname} id={projectname} />
    </div>
    <div class="project-short-infos">
        <div class="project-tags">
            <ul>
                {projecttags.map((tag) => (
                    <li>
                        <p> <i class={getIconClass(tag.name)}></i> {tag.name}</p>
                    </li>
                ))}
            </ul>
        </div>
    </div>
    <div class="image-overlay"></div>
    <hr>
    <br>
    <div class="project-description">
        <p id="text">{projectdescription.slice(0, 110)}{projectdescription.length > 110 ? '...' : ''}</p>
        <button class="readall" id={projectid} onclick="readall()">Read all</button>
    </div>
    <div class="project-technologies">
        <h4>Built with :</h4>
        <ul>
            {technologies.map((technology) => (
                <li>
                    <p><i class={getIconClass2(technology.name)} style={{ color: technology.color }}></i> {technology.name}</p>
                </li>
            ))}
        </ul>
    </div>
    <hr>
    <div class="project-links">
        {projectlinks.github && (
            <a href={projectlinks.github} target="_blank" rel="noopener noreferrer" id="link-gh">
                <i class="fa fa-github"></i> View on GitHub 
            </a>
        )}
        {projectlinks.live && (
            <a href={projectlinks.live} target="_blank" rel="noopener noreferrer" id="link-live">
                Live Preview <i class="fa fa-arrow-up-right-from-square"></i>
            </a>
        )}
    </div>
</div>


<style>
    .project {
        margin: 2rem 0;
        padding: 1rem;
        border: 1px solid #eaeaea;
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

    .project h2 {
        margin-bottom: 1rem;
        color: #ffffffa6;
    }

    .project-short-infos {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .project-tags ul {
        display: flex;
        gap: 0.5rem;
    }

    .project-tags ul li {
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .project-preview {
        float: right;
        margin-left: 1rem;
        box-shadow: 0 0 10px rgb(var(--accent-light));
        margin-top: -5rem;
    }

    .project-preview img {
        width: 100%;
        max-width: 300px;
        transition: all 0.5s ease;
        cursor: pointer;
        border-radius: 10px;
    }

    .image-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: #0000009e;
        z-index: 999;
        display: none;
    }

    .project-description p {
        color: #ffffffa6;
    }

    /* smooth fade Big and small animation */
    @keyframes imgSizeUp {
        0% {
            transform: scale(0.5);
        }
        100% {
            transform: scale(1);
        }
    }

    @keyframes imgSizeDown {
        0% {
            transform: scale(1);
        }
        100% {
            transform: scale(0.5);
        }
    }
    .project-description {
        margin-left: 3rem;
        color: #ffffff8f;
    }

    .project-technologies ul {
        display: flex;
        gap: 0.5rem;
        margin-left: 0.5rem;
    }

    .project-technologies h4 {
        color: #ffffffa6;
        margin-left: 3rem;
        font-weight: 500;
        margin-bottom: -1rem;
    }


    .project-technologies ul li {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        background-color: #33333349;
        border: none;
        font-size: 0.8rem;
        font-weight: bold;
        border-radius: 5px;
        cursor: pointer;
        padding: 3px 5px;
    }

    .project-links {
        display: flex;
        gap: 1rem;
        justify-content: flex-end;
    }

    .project-links a {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        text-decoration: none;     
    }

    .project-links a img {
        width: 30px;
        height: 30px;
    }

    #link-gh {
        color: #a3a3a3;
    }

    #link-live {
        color: #67b886a6;
    }

    #link-gh:hover {
        color: #ffffff;
    }

    #link-live:hover {
        color: #86f0af;
    }


    .readall {
        background-color: #3333339f;
        color: white;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-weight: bold;
    }
    /*  cool animation  for hover */
    .readall:hover {
        background-color: #444; 
    }

    @media (max-width: 768px) {
        /* Make project image over the project tags */
        .project-preview {
            margin-top: -0.2rem;
        }
        .project-short-infos {
            margin-top: 10em;
            flex-direction: column;
            align-items: flex-start;
        }

        .project-tags ul {
            flex-direction:row;
            align-items: center;
        }

        .project-technologies {
            height: auto;
        }

        .project-technologies ul{
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            gap: 0.5rem;
            justify-content: center;
            font-size: smaller;
            width: 70%;
        }
    }
</style>
